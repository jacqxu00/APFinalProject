import java.lang.Math;
import java.util.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class Sim extends JFrame {
    private double mass;
    private double height;
    private double gravity;
    private double coeff;
    private double velocity;
    private double dist;
    private double totalE;
    private double kineticE;
    private double potentialE;
    private double thermalE;
    private double angle;
    private Container pane;
    private JTextField m;
    private JTextField g;
    private JTextField c;
    private Container pane;

    public Sim() {
	mass = 50.0;
	gravity = 9.81;
	coeff = 0;
	height = 0;
	velocity = 0;
	dist = 0;
	totalE = 0;
	kineticE = 0;
	potentialE = 0;
	thermalE = 0;
	angle = 0;
	this.setTitle("Conservation of Energy AsimulaXuon");
	this.setSize(200,800);
	this.setLocation(100,100);
	this.setDefaultCloseOperation(EXIT_ON_CLOSE);
	pane = this.getContentPane();
	pane.setLayout(new BoxLayout(pane, BoxLayout.Y_AXIS));
	m = new JTextField(10);
	g = new JTextField(10);
	c = new JTextField(10);
	pane.add(m);
	pane.add(g);
	pane.add(c);
    }

    // MATH

    public void setHeight(double h) {
	height = h;
    }

    public void setMass(double m) {
	mass = m;
    }

    public void setGravity(double g) {
	gravity = g;
    }
   
    public void setCoeff(double c) {
	coeff = c;
    }

    public double setPotEnergy() {
	double ans = mass * gravity * height;
	potentialE = ans;
	return ans;
    }

    public double setTotEnergy() {
	double ans = mass * gravity * height;
	totalE = ans;
	return ans;
    }

    // need to set distance and angle
    public double setThermEnergy() {
	double ans = coeff * mass * gravity * Math.cos(angle) * dist;
	thermalE = ans;
	return ans;
    }

    public double setVelocity() {
	double ans = totalE - potentialE - thermalE;
	ans = Math.sqrt((2 * ans)/mass);
	velocity = ans;
	return ans;
    }

    public double setKinEnergy() {
	double ans = 0.5 * mass * velocity * velocity;
	kineticE = ans;
	return ans;
    }

    // GUI TEXTBOXES

    
    // UPDATE and RUN

    public static void main(String[] args){
	while(true){
	    updateGame();
	}
    }

    public void updateGame(){
	setMass(m.getText());
	setGravity(g.getText());
	setCoeff(c.getText());
	// setHeight = # of pixels;
	// setAngle = something GUI;
	// setDist = based on time? GUI
	setTotEnergy();
	setPotEnergy();
	// setThermEnergy();
	setVelocity();
	setKinEnergy();
    }
}
